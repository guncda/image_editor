<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="colorPalette.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>